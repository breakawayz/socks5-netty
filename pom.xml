<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.geccocrawler</groupId>
	<artifactId>socks5-netty</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<properties>
		<logback.version>1.1.7</logback.version>
		<slf4j.version>1.7.21</slf4j.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-all</artifactId>
			<version>4.1.6.Final</version>
		</dependency>
		<!--
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.21</version>
		</dependency>
-->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>${logback.version}</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.10</version>
		</dependency>
		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>okhttp</artifactId>
			<version>3.5.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.16.10</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>appassembler-maven-plugin</artifactId>
				<version>1.10</version>
				<configuration>
					<!-- 生成linux, windows两种平台的执行脚本 -->
					<platforms>
						<platform>windows</platform>
						<platform>unix</platform>
					</platforms>
					<!--打包后生成的目录位置 -->
					<target>${project.build.directory}/assembler</target>
					<!--是否将配置文件包含到classpath -->
					<includeConfigurationDirectoryInClasspath>true</includeConfigurationDirectoryInClasspath>
					<!--为系统配置文件指定一个目录 -->
					<configurationDirectory>conf</configurationDirectory>
					<!--源代码中对应的系统配置文件的位置 -->
					<configurationSourceDirectory>src/main/resources</configurationSourceDirectory>
					<!--是否拷贝源代码中配置文件中的目录 -->
					<copyConfigurationDirectory>true</copyConfigurationDirectory>
					<!--依赖的lib包的目录格式，flat表示不分目录平铺到lib目录下 -->
					<repositoryLayout>flat</repositoryLayout>
					<!--依赖的lib包的目录名称 -->
					<repositoryName>lib</repositoryName>

					<logsDirectory>logs</logsDirectory>
					<tempDirectory>tmp</tempDirectory>
					<programs>
						<program>
							<id>socksproxy</id>
							<!-- 启动类 -->
							<mainClass>com.geccocrawler.socks5.ProxyServer</mainClass>
							<jvmSettings>
								<extraArguments>
									<extraArgument>-server</extraArgument>
									<extraArgument>-Xmx2G</extraArgument>
									<extraArgument>-Xms2G</extraArgument>
								</extraArguments>
							</jvmSettings>
						</program>
					</programs>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>